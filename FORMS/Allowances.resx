<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="editBtn.CheckedImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAcJJREFUOE+V
        lEsrRGEYx0e5ZNyGlAYbC3wM5TIWWE5kYSRN+QBqyn2nLLG3YCO2iGJSWJDLVj4BJZcopPH7n3nOMOOM
        Gb/6Nc/zvM975rznvO/x5SKRSFRhk1lp5f/BxGqcwzM8wBUzjqc4iwFr/xsa+/ECh9Bv5RSqYcR6wlb2
        hoYYrmO5lbJCTwVu4LiV0mFgEHWxAgxhpw39grEujVvvJvbbUBIKevBaQhkG8RlfsQc7MGy2Yy9q7Anr
        UHequd8vjGQCIxZHMV9Gbc4IxhQ7kJxgqcVjmC9Rm6MXdaRYiW457iRAPID5knp2xIfoV9CCq1ZXvofi
        HbU9hvHDIxe7Nk3z1rBZQSs6F+S3Fj9RXDudQHzjkQv11lhNF2xRkFoyv934k0VcSoYOmbkI2VwtuUyx
        kmOsRC3Ji3nTC50oHdXkSxEk2jbaLgHU2c3k3sxkH7WHtTPSto2Kl6iNXYQ6/I+YjQecwULUI7vC9C8R
        BffoleAC6nn24RQum4p1UjSmnmL8ffRcGNDH4RxdbnEb9UdyB+/QRUfO++PgQsM0vqk7B+qZtGl/Q2MD
        6s5eMBPVtjBo7f+DiY3YZtZbOQs+3xcwqLQ+pE6R4AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="delBtn.CheckedImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAcJJREFUOE+V
        lEsrRGEYx0e5ZNyGlAYbC3wM5TIWWE5kYSRN+QBqyn2nLLG3YCO2iGJSWJDLVj4BJZcopPH7n3nOMOOM
        Gb/6Nc/zvM975rznvO/x5SKRSFRhk1lp5f/BxGqcwzM8wBUzjqc4iwFr/xsa+/ECh9Bv5RSqYcR6wlb2
        hoYYrmO5lbJCTwVu4LiV0mFgEHWxAgxhpw39grEujVvvJvbbUBIKevBaQhkG8RlfsQc7MGy2Yy9q7Anr
        UHequd8vjGQCIxZHMV9Gbc4IxhQ7kJxgqcVjmC9Rm6MXdaRYiW457iRAPID5knp2xIfoV9CCq1ZXvofi
        HbU9hvHDIxe7Nk3z1rBZQSs6F+S3Fj9RXDudQHzjkQv11lhNF2xRkFoyv934k0VcSoYOmbkI2VwtuUyx
        kmOsRC3Ji3nTC50oHdXkSxEk2jbaLgHU2c3k3sxkH7WHtTPSto2Kl6iNXYQ6/I+YjQecwULUI7vC9C8R
        BffoleAC6nn24RQum4p1UjSmnmL8ffRcGNDH4RxdbnEb9UdyB+/QRUfO++PgQsM0vqk7B+qZtGl/Q2MD
        6s5eMBPVtjBo7f+DiY3YZtZbOQs+3xcwqLQ+pE6R4AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="resetImgBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnAddAllowance.CheckedImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAcJJREFUOE+V
        lEsrRGEYx0e5ZNyGlAYbC3wM5TIWWE5kYSRN+QBqyn2nLLG3YCO2iGJSWJDLVj4BJZcopPH7n3nOMOOM
        Gb/6Nc/zvM975rznvO/x5SKRSFRhk1lp5f/BxGqcwzM8wBUzjqc4iwFr/xsa+/ECh9Bv5RSqYcR6wlb2
        hoYYrmO5lbJCTwVu4LiV0mFgEHWxAgxhpw39grEujVvvJvbbUBIKevBaQhkG8RlfsQc7MGy2Yy9q7Anr
        UHequd8vjGQCIxZHMV9Gbc4IxhQ7kJxgqcVjmC9Rm6MXdaRYiW457iRAPID5knp2xIfoV9CCq1ZXvofi
        HbU9hvHDIxe7Nk3z1rBZQSs6F+S3Fj9RXDudQHzjkQv11lhNF2xRkFoyv934k0VcSoYOmbkI2VwtuUyx
        kmOsRC3Ji3nTC50oHdXkSxEk2jbaLgHU2c3k3sxkH7WHtTPSto2Kl6iNXYQ6/I+YjQecwULUI7vC9C8R
        BffoleAC6nn24RQum4p1UjSmnmL8ffRcGNDH4RxdbnEb9UdyB+/QRUfO++PgQsM0vqk7B+qZtGl/Q2MD
        6s5eMBPVtjBo7f+DiY3YZtZbOQs+3xcwqLQ+pE6R4AAAAABJRU5ErkJggg==
</value>
  </data>
</root>