<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="searchElipse.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>